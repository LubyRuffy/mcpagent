// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/LubyRuffy/mcpagent/pkg/config (interfaces: MCPHubInterface)

// Package config is a generated GoMock package.
package config

import (
	context "context"
	reflect "reflect"

	tool "github.com/cloudwego/eino/components/tool"
	gomock "github.com/golang/mock/gomock"
)

// MockMCPHubInterface is a mock of MCPHubInterface interface.
type MockMCPHubInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMCPHubInterfaceMockRecorder
}

// MockMCPHubInterfaceMockRecorder is the mock recorder for MockMCPHubInterface.
type MockMCPHubInterfaceMockRecorder struct {
	mock *MockMCPHubInterface
}

// NewMockMCPHubInterface creates a new mock instance.
func NewMockMCPHubInterface(ctrl *gomock.Controller) *MockMCPHubInterface {
	mock := &MockMCPHubInterface{ctrl: ctrl}
	mock.recorder = &MockMCPHubInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMCPHubInterface) EXPECT() *MockMCPHubInterfaceMockRecorder {
	return m.recorder
}

// CloseServers mocks base method.
func (m *MockMCPHubInterface) CloseServers() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseServers")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseServers indicates an expected call of CloseServers.
func (mr *MockMCPHubInterfaceMockRecorder) CloseServers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseServers", reflect.TypeOf((*MockMCPHubInterface)(nil).CloseServers))
}

// GetEinoTools mocks base method.
func (m *MockMCPHubInterface) GetEinoTools(arg0 context.Context, arg1 []string) ([]tool.BaseTool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEinoTools", arg0, arg1)
	ret0, _ := ret[0].([]tool.BaseTool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEinoTools indicates an expected call of GetEinoTools.
func (mr *MockMCPHubInterfaceMockRecorder) GetEinoTools(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEinoTools", reflect.TypeOf((*MockMCPHubInterface)(nil).GetEinoTools), arg0, arg1)
}
